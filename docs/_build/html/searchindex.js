Search.setIndex({"docnames": ["BasicDemo", "batch_code_set_default_parameter", "camera_interface", "docs/BasicDemo", "docs/batch_code_set_default_parameter", "docs/camera_interface", "docs/gui", "docs/gui_camera_bindings", "docs/main", "docs/main_gui", "docs/modules", "docs/new_brand_pickle", "docs/test", "docs/test1", "docs/test2", "gui", "gui_camera_bindings", "index", "main", "main_gui", "modules", "new_brand_pickle", "test", "test1", "test2"], "filenames": ["BasicDemo.rst", "batch_code_set_default_parameter.rst", "camera_interface.rst", "docs/BasicDemo.rst", "docs/batch_code_set_default_parameter.rst", "docs/camera_interface.rst", "docs/gui.rst", "docs/gui_camera_bindings.rst", "docs/main.rst", "docs/main_gui.rst", "docs/modules.rst", "docs/new_brand_pickle.rst", "docs/test.rst", "docs/test1.rst", "docs/test2.rst", "gui.rst", "gui_camera_bindings.rst", "index.rst", "main.rst", "main_gui.rst", "modules.rst", "new_brand_pickle.rst", "test.rst", "test1.rst", "test2.rst"], "titles": ["BasicDemo module", "batch_code_set_default_parameter module", "camera_interface package", "BasicDemo module", "batch_code_set_default_parameter module", "camera_interface package", "gui package", "gui_camera_bindings package", "main module", "main_gui module", "PyQT5-Batch-Code-Inspection-System", "new_brand_pickle module", "test module", "test1 module", "test2 module", "gui package", "gui_camera_bindings package", "Welcome to Batch-code-inspection-system\u2019s documentation!", "main module", "main_gui module", "PyQT5-Batch-Code-Inspection-System", "new_brand_pickle module", "test module", "test1 module", "test2 module"], "terms": {"async_rais": [2, 5, 10, 20], "tid": [2, 5], "exctyp": [2, 5], "class": [2, 5, 6, 7, 9, 12, 14, 15, 16, 19, 22, 24], "cameraoper": [2, 5, 10, 20], "obj_cam": [2, 5], "st_device_list": [2, 5], "n_connect_num": [2, 5], "0": [2, 5, 12, 22], "b_open_devic": [2, 5], "fals": [2, 5], "b_start_grab": [2, 5], "h_thread_handl": [2, 5], "none": [2, 5, 9, 19], "b_thread_clos": [2, 5], "st_frame_info": [2, 5], "b_exit": [2, 5], "b_save_bmp": [2, 5], "b_save_jpg": [2, 5], "buf_save_imag": [2, 5], "n_save_image_s": [2, 5], "n_win_gui_id": [2, 5], "frame_r": [2, 5], "exposure_tim": [2, 5], "gain": [2, 5], "base": [2, 5, 6, 7, 9, 12, 14, 15, 16, 19, 22, 24], "object": [2, 5, 6, 12, 15, 22], "close_devic": [2, 5, 10, 20], "get_paramet": [2, 5, 10, 20], "open_devic": [2, 5, 10, 20], "save_bmp": [2, 5, 10, 20], "save_jpg": [2, 5, 10, 20], "set_paramet": [2, 5, 10, 20], "framer": [2, 5], "exposuretim": [2, 5], "set_trigger_mod": [2, 5, 10, 20], "is_trigger_mod": [2, 5], "hardware_trigg": [2, 5], "start_grab": [2, 5, 10, 20], "winhandl": [2, 5], "stop_grab": [2, 5, 10, 20], "trigger_onc": [2, 5, 10, 20], "work_thread": [2, 5, 10, 20], "image_captured_callback": [2, 5, 10, 20], "color_numpi": [2, 5, 10, 20], "data": [2, 5, 9, 19], "nwidth": [2, 5], "nheight": [2, 5], "is_color_data": [2, 5, 10, 20], "engvsppixeltyp": [2, 5], "is_mono_data": [2, 5, 10, 20], "mono_numpi": [2, 5, 10, 20], "stop_thread": [2, 5, 10, 20], "thread": [2, 5], "to_hex_str": [2, 5, 10, 20], "num": [0, 2, 3, 5, 9, 19], "errormessag": [2, 5, 10, 20], "titl": [2, 5], "str": [2, 5, 7, 12, 16, 22], "qerrormessag": [2, 5], "machinevisioncamera": [2, 5, 7, 10, 16, 20], "interact": [2, 5], "hikrobot": [2, 5], "": [2, 5, 12, 14, 22, 24], "mv": [2, 5], "ce": [2, 5], "seri": [2, 5], "c": [2, 5, 12, 22], "area": [2, 5], "scan": [2, 5], "close": [2, 5], "disabl": [2, 5], "connect": [2, 5], "between": [2, 5], "host": [2, 5], "decoding_char": [2, 5, 10, 20], "c_ubyte_valu": [2, 5], "enable_control": [2, 5, 10, 20], "enum_devic": [2, 5, 10, 20], "int": [2, 5, 12, 22], "list": [2, 5, 7, 16], "all": [0, 2, 3, 5, 9, 19], "devic": [2, 5], "get_param": [2, 5, 10, 20], "is_float": [2, 5, 10, 20], "message_box": [2, 5, 10, 20], "text": [2, 5], "valu": [2, 5, 7, 9, 12, 16, 19, 22], "open": [2, 5, 9, 19], "establish": [2, 5], "set_continue_mod": [2, 5, 10, 20], "set_device_information_index": [2, 5, 10, 20], "camera_nam": [2, 5], "set_image_callback_on_trigg": [2, 5, 10, 20], "callback": [2, 5], "pass": [2, 5], "function": [2, 5, 9, 19], "ha": [2, 5], "imag": [2, 5, 9, 19], "an": [2, 5], "argument": [2, 5, 12, 22], "def": [2, 5], "set_param": [2, 5, 10, 20], "set_software_trigger_mod": [2, 5, 10, 20], "set_ui": [2, 5, 10, 20], "ui": [2, 5], "begin": [2, 5], "grab": [2, 5], "from": [2, 5, 9, 19], "notic": [2, 5], "trigger": [2, 5], "set": [2, 5, 9, 19], "contain": [2, 5], "continu": [2, 5], "hardwar": [2, 5], "softwar": [2, 5], "mode": [2, 5, 9, 19], "stop": [2, 5], "captur": [2, 5], "even": [2, 5], "ar": [2, 5], "xfunc": [2, 5, 10, 20], "event": [2, 5], "bind": [2, 5], "drop": [2, 5], "down": [2, 5], "inform": [2, 5], "index": [2, 5, 17], "tohexstr": [0, 2, 3, 5, 9, 10, 19, 20], "txtwrapbi": [0, 2, 3, 5, 10, 20], "start_str": [0, 2, 3, 5], "end": [0, 2, 3, 5], "ui_mainwindow": [6, 7, 10, 15, 16, 20], "retranslateui": [6, 10, 15, 20], "mainwindow": [6, 14, 15, 24], "setupui": [6, 10, 15, 20], "main_window": [7, 16], "camera": [7, 9, 10, 16, 19, 20], "basic_demo_test": [7, 10, 16, 20], "set_camera_to_gui": [7, 10, 16, 20], "test": [7, 10, 16, 20], "your": [7, 16], "document": [7, 16], "here": [7, 16], "param": [7, 16], "kind": [7, 16], "option": [7, 12, 16, 22], "type": [7, 12, 16, 22], "rais": [7, 16], "return": [7, 16], "The": [7, 16], "rtype": [7, 16], "pyqt5": 17, "gui": [9, 10, 17, 19, 20], "packag": [10, 17, 20], "camera_interfac": [10, 17, 20], "gui_camera_bind": [10, 17, 20], "main": [10, 17, 20], "modul": [10, 17, 20], "main_gui": [10, 17, 20], "search": 17, "page": [9, 17, 19], "test_callback": [8, 10, 18, 20], "numarrai": [8, 18], "submodul": [10, 20], "pyuicbasicdemo": [10, 20], "pyuidesign": [10, 20], "content": [10, 20], "camoperation_class": [10, 20], "tool": [10, 20], "control": [10, 20], "exampl": [12, 22], "qwidget": [12, 22], "initui": [12, 22], "loglabel": [12, 22], "log": [12, 22], "file": [9, 12, 19, 22], "mine": [12, 22], "string": [12, 22], "on_sld_valuechang": [12, 22], "printlabel": [12, 22], "val_chang": [12, 22], "pyqtsign": [12, 22], "name": [12, 22], "revis": [12, 22], "sequenc": [12, 22], "pyqt_sign": [12, 22], "i": [9, 12, 19, 22], "normal": [12, 22], "individu": [12, 22], "each": [12, 22], "either": [12, 22], "altern": [12, 22], "could": [12, 22], "itself": [12, 22], "describ": [12, 22], "differ": [12, 22], "overload": [12, 22], "signal": [12, 22], "If": [12, 22], "specifi": [12, 22], "attribut": [12, 22], "bound": [12, 22], "us": [9, 12, 19, 22], "export": [12, 22], "qml": [12, 22], "flush_then_wait": [13, 23], "qmainwindow": [9, 14, 19, 24], "handle_st": [14, 24], "state": [14, 24], "handle_stderr": [14, 24], "handle_stdout": [14, 24], "messag": [14, 24], "process_finish": [14, 24], "start_process": [14, 24], "basicdemo": 10, "batch_code_set_default_paramet": 10, "new_brand_pickl": [], "test1": [], "test2": [], "mainwin": [9, 10, 19, 20], "analysi": [9, 10, 19, 20], "camera_debug": [9, 10, 19, 20], "camera_set": [9, 10, 19, 20], "chang": [9, 19], "choose_directory_path": [9, 10, 19, 20], "path": [9, 19], "save": [9, 19], "create_project": [9, 10, 19, 20], "detect": [9, 10, 19, 20], "open_imag": [9, 10, 19, 20], "select": [9, 19], "roi": [9, 19], "displai": [9, 19], "preprocessing_step": [9, 10, 19, 20], "recognit": [9, 10, 19, 20], "save_data": [9, 10, 19, 20], "save_gui_valu": [9, 10, 19, 20], "take": [9, 19], "user": [9, 19], "input": [9, 19], "pickl": [9, 19], "switch_mod": [9, 10, 19, 20], "check": [9, 19], "switch": [9, 19], "its": [9, 19], "when": [9, 19], "button": [9, 19], "click": [9, 19]}, "objects": {"": [[3, 0, 0, "-", "BasicDemo"], [5, 0, 0, "-", "camera_interface"], [15, 0, 0, "-", "gui"], [16, 0, 0, "-", "gui_camera_bindings"], [18, 0, 0, "-", "main"], [19, 0, 0, "-", "main_gui"], [22, 0, 0, "-", "test"], [23, 0, 0, "-", "test1"], [24, 0, 0, "-", "test2"]], "BasicDemo": [[3, 1, 1, "", "ToHexStr"], [3, 1, 1, "", "TxtWrapBy"]], "camera_interface": [[5, 0, 0, "-", "CamOperation_class"], [5, 0, 0, "-", "camera"], [5, 0, 0, "-", "tools"]], "camera_interface.CamOperation_class": [[5, 1, 1, "", "Async_raise"], [5, 2, 1, "", "CameraOperation"], [5, 1, 1, "", "Color_numpy"], [5, 1, 1, "", "Is_color_data"], [5, 1, 1, "", "Is_mono_data"], [5, 1, 1, "", "Mono_numpy"], [5, 1, 1, "", "Stop_thread"], [5, 1, 1, "", "To_hex_str"]], "camera_interface.CamOperation_class.CameraOperation": [[5, 3, 1, "", "Close_device"], [5, 3, 1, "", "Get_parameter"], [5, 3, 1, "", "Open_device"], [5, 3, 1, "", "Save_Bmp"], [5, 3, 1, "", "Save_jpg"], [5, 3, 1, "", "Set_parameter"], [5, 3, 1, "", "Set_trigger_mode"], [5, 3, 1, "", "Start_grabbing"], [5, 3, 1, "", "Stop_grabbing"], [5, 3, 1, "", "Trigger_once"], [5, 3, 1, "", "Work_thread"], [5, 3, 1, "", "image_captured_callback"]], "camera_interface.camera": [[5, 2, 1, "", "ErrorMessage"], [5, 2, 1, "", "MachineVisionCamera"]], "camera_interface.camera.MachineVisionCamera": [[5, 3, 1, "", "close_device"], [5, 3, 1, "", "decoding_char"], [5, 3, 1, "", "enable_controls"], [5, 3, 1, "", "enum_devices"], [5, 3, 1, "", "get_param"], [5, 3, 1, "", "is_float"], [5, 3, 1, "", "message_box"], [5, 3, 1, "", "open_device"], [5, 3, 1, "", "save_bmp"], [5, 3, 1, "", "set_continue_mode"], [5, 3, 1, "", "set_device_information_index"], [5, 3, 1, "", "set_image_callback_on_trigger"], [5, 3, 1, "", "set_param"], [5, 3, 1, "", "set_software_trigger_mode"], [5, 3, 1, "", "set_ui"], [5, 3, 1, "", "start_grabbing"], [5, 3, 1, "", "stop_grabbing"], [5, 3, 1, "", "trigger_once"], [5, 3, 1, "", "xFunc"]], "camera_interface.tools": [[5, 1, 1, "", "ToHexStr"], [5, 1, 1, "", "TxtWrapBy"]], "gui": [[15, 0, 0, "-", "PyUICBasicDemo"], [15, 0, 0, "-", "pyUIdesign"]], "gui.PyUICBasicDemo": [[15, 2, 1, "", "Ui_MainWindow"]], "gui.PyUICBasicDemo.Ui_MainWindow": [[15, 3, 1, "", "retranslateUi"], [15, 3, 1, "", "setupUi"]], "gui.pyUIdesign": [[15, 2, 1, "", "Ui_MainWindow"]], "gui.pyUIdesign.Ui_MainWindow": [[15, 3, 1, "", "retranslateUi"], [15, 3, 1, "", "setupUi"]], "gui_camera_bindings": [[16, 0, 0, "-", "controller"]], "gui_camera_bindings.controller": [[16, 2, 1, "", "Controller"], [16, 1, 1, "", "test"]], "gui_camera_bindings.controller.Controller": [[16, 3, 1, "", "basic_demo_test"], [16, 3, 1, "", "set_camera_to_gui"]], "main": [[18, 1, 1, "", "test_callback"]], "main_gui": [[19, 2, 1, "", "MainWin"]], "main_gui.MainWin": [[19, 3, 1, "", "ToHexStr"], [19, 3, 1, "", "analysis"], [19, 3, 1, "", "camera_debug"], [19, 3, 1, "", "camera_setting"], [19, 3, 1, "", "choose_directory_path"], [19, 3, 1, "", "create_project"], [19, 3, 1, "", "detection"], [19, 3, 1, "", "open_image"], [19, 3, 1, "", "preprocessing_step"], [19, 3, 1, "", "recognition"], [19, 3, 1, "", "save_data"], [19, 3, 1, "", "save_gui_values"], [19, 3, 1, "", "switch_mode"]], "test": [[22, 2, 1, "", "Example"]], "test.Example": [[22, 3, 1, "", "initUI"], [22, 3, 1, "", "logLabel"], [22, 3, 1, "", "mine"], [22, 3, 1, "", "on_sld_valueChanged"], [22, 3, 1, "", "printLabel"], [22, 4, 1, "", "val_Changed"]], "test1": [[23, 1, 1, "", "flush_then_wait"]], "test2": [[24, 2, 1, "", "MainWindow"]], "test2.MainWindow": [[24, 3, 1, "", "handle_state"], [24, 3, 1, "", "handle_stderr"], [24, 3, 1, "", "handle_stdout"], [24, 3, 1, "", "message"], [24, 3, 1, "", "process_finished"], [24, 3, 1, "", "start_process"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"basicdemo": [0, 3], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24], "batch_code_set_default_paramet": [1, 4], "camera_interfac": [2, 5], "packag": [2, 5, 6, 7, 15, 16], "submodul": [2, 5, 6, 7, 15, 16], "camoperation_class": [2, 5], "camera": [2, 5], "tool": [2, 5], "content": [2, 5, 6, 7, 15, 16, 17], "gui": [6, 15], "pyuicbasicdemo": [6, 15], "pyuidesign": [6, 15], "gui_camera_bind": [7, 16], "control": [7, 16], "welcom": 17, "batch": [10, 17, 20], "code": [10, 17, 20], "inspect": [10, 17, 20], "system": [10, 17, 20], "": 17, "document": 17, "indic": 17, "tabl": 17, "main": [8, 18], "main_gui": [9, 19], "pyqt5": [10, 20], "new_brand_pickl": [11, 21], "test": [12, 22], "test1": [13, 23], "test2": [14, 24]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"BasicDemo module": [[0, "module-BasicDemo"], [3, "module-BasicDemo"]], "batch_code_set_default_parameter module": [[1, "batch-code-set-default-parameter-module"], [4, "batch-code-set-default-parameter-module"]], "camera_interface package": [[2, "camera-interface-package"], [5, "camera-interface-package"]], "Submodules": [[2, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [15, "submodules"], [16, "submodules"]], "camera_interface.CamOperation_class module": [[2, "module-camera_interface.CamOperation_class"], [5, "module-camera_interface.CamOperation_class"]], "camera_interface.camera module": [[2, "module-camera_interface.camera"], [5, "module-camera_interface.camera"]], "camera_interface.tools module": [[2, "module-camera_interface.tools"], [5, "module-camera_interface.tools"]], "Module contents": [[2, "module-camera_interface"], [5, "module-camera_interface"], [6, "module-gui"], [7, "module-gui_camera_bindings"], [15, "module-gui"], [16, "module-gui_camera_bindings"]], "gui package": [[6, "gui-package"], [15, "gui-package"]], "gui.PyUICBasicDemo module": [[6, "module-gui.PyUICBasicDemo"], [15, "module-gui.PyUICBasicDemo"]], "gui.pyUIdesign module": [[6, "module-gui.pyUIdesign"], [15, "module-gui.pyUIdesign"]], "gui_camera_bindings package": [[7, "gui-camera-bindings-package"], [16, "gui-camera-bindings-package"]], "gui_camera_bindings.controller module": [[7, "module-gui_camera_bindings.controller"], [16, "module-gui_camera_bindings.controller"]], "main module": [[8, "module-main"], [18, "module-main"]], "main_gui module": [[9, "module-main_gui"], [19, "module-main_gui"]], "PyQT5-Batch-Code-Inspection-System": [[10, "pyqt5-batch-code-inspection-system"], [20, "pyqt5-batch-code-inspection-system"]], "new_brand_pickle module": [[11, "new-brand-pickle-module"], [21, "new-brand-pickle-module"]], "test module": [[12, "module-test"], [22, "module-test"]], "test1 module": [[13, "module-test1"], [23, "module-test1"]], "test2 module": [[14, "module-test2"], [24, "module-test2"]], "Welcome to Batch-code-inspection-system\u2019s documentation!": [[17, "welcome-to-batch-code-inspection-system-s-documentation"]], "Contents:": [[17, null]], "Indices and tables": [[17, "indices-and-tables"]]}, "indexentries": {"basicdemo": [[0, "module-BasicDemo"], [3, "module-BasicDemo"]], "tohexstr() (in module basicdemo)": [[0, "BasicDemo.ToHexStr"], [3, "BasicDemo.ToHexStr"]], "txtwrapby() (in module basicdemo)": [[0, "BasicDemo.TxtWrapBy"], [3, "BasicDemo.TxtWrapBy"]], "module": [[0, "module-BasicDemo"], [2, "module-camera_interface"], [2, "module-camera_interface.CamOperation_class"], [2, "module-camera_interface.camera"], [2, "module-camera_interface.tools"], [3, "module-BasicDemo"], [5, "module-camera_interface"], [5, "module-camera_interface.CamOperation_class"], [5, "module-camera_interface.camera"], [5, "module-camera_interface.tools"], [6, "module-gui"], [6, "module-gui.PyUICBasicDemo"], [6, "module-gui.pyUIdesign"], [7, "module-gui_camera_bindings"], [7, "module-gui_camera_bindings.controller"], [8, "module-main"], [9, "module-main_gui"], [12, "module-test"], [13, "module-test1"], [14, "module-test2"], [15, "module-gui"], [15, "module-gui.PyUICBasicDemo"], [15, "module-gui.pyUIdesign"], [16, "module-gui_camera_bindings"], [16, "module-gui_camera_bindings.controller"], [18, "module-main"], [19, "module-main_gui"], [22, "module-test"], [23, "module-test1"], [24, "module-test2"]], "async_raise() (in module camera_interface.camoperation_class)": [[2, "camera_interface.CamOperation_class.Async_raise"], [5, "camera_interface.CamOperation_class.Async_raise"]], "cameraoperation (class in camera_interface.camoperation_class)": [[2, "camera_interface.CamOperation_class.CameraOperation"], [5, "camera_interface.CamOperation_class.CameraOperation"]], "close_device() (camera_interface.camoperation_class.cameraoperation method)": [[2, "camera_interface.CamOperation_class.CameraOperation.Close_device"], [5, "camera_interface.CamOperation_class.CameraOperation.Close_device"]], "color_numpy() (in module camera_interface.camoperation_class)": [[2, "camera_interface.CamOperation_class.Color_numpy"], [5, "camera_interface.CamOperation_class.Color_numpy"]], "errormessage (class in camera_interface.camera)": [[2, "camera_interface.camera.ErrorMessage"], [5, "camera_interface.camera.ErrorMessage"]], "get_parameter() (camera_interface.camoperation_class.cameraoperation method)": [[2, "camera_interface.CamOperation_class.CameraOperation.Get_parameter"], [5, "camera_interface.CamOperation_class.CameraOperation.Get_parameter"]], "is_color_data() (in module camera_interface.camoperation_class)": [[2, "camera_interface.CamOperation_class.Is_color_data"], [5, "camera_interface.CamOperation_class.Is_color_data"]], "is_mono_data() (in module camera_interface.camoperation_class)": [[2, "camera_interface.CamOperation_class.Is_mono_data"], [5, "camera_interface.CamOperation_class.Is_mono_data"]], "machinevisioncamera (class in camera_interface.camera)": [[2, "camera_interface.camera.MachineVisionCamera"], [5, "camera_interface.camera.MachineVisionCamera"]], "mono_numpy() (in module camera_interface.camoperation_class)": [[2, "camera_interface.CamOperation_class.Mono_numpy"], [5, "camera_interface.CamOperation_class.Mono_numpy"]], "open_device() (camera_interface.camoperation_class.cameraoperation method)": [[2, "camera_interface.CamOperation_class.CameraOperation.Open_device"], [5, "camera_interface.CamOperation_class.CameraOperation.Open_device"]], "save_bmp() (camera_interface.camoperation_class.cameraoperation method)": [[2, "camera_interface.CamOperation_class.CameraOperation.Save_Bmp"], [5, "camera_interface.CamOperation_class.CameraOperation.Save_Bmp"]], "save_jpg() (camera_interface.camoperation_class.cameraoperation method)": [[2, "camera_interface.CamOperation_class.CameraOperation.Save_jpg"], [5, "camera_interface.CamOperation_class.CameraOperation.Save_jpg"]], "set_parameter() (camera_interface.camoperation_class.cameraoperation method)": [[2, "camera_interface.CamOperation_class.CameraOperation.Set_parameter"], [5, "camera_interface.CamOperation_class.CameraOperation.Set_parameter"]], "set_trigger_mode() (camera_interface.camoperation_class.cameraoperation method)": [[2, "camera_interface.CamOperation_class.CameraOperation.Set_trigger_mode"], [5, "camera_interface.CamOperation_class.CameraOperation.Set_trigger_mode"]], "start_grabbing() (camera_interface.camoperation_class.cameraoperation method)": [[2, "camera_interface.CamOperation_class.CameraOperation.Start_grabbing"], [5, "camera_interface.CamOperation_class.CameraOperation.Start_grabbing"]], "stop_grabbing() (camera_interface.camoperation_class.cameraoperation method)": [[2, "camera_interface.CamOperation_class.CameraOperation.Stop_grabbing"], [5, "camera_interface.CamOperation_class.CameraOperation.Stop_grabbing"]], "stop_thread() (in module camera_interface.camoperation_class)": [[2, "camera_interface.CamOperation_class.Stop_thread"], [5, "camera_interface.CamOperation_class.Stop_thread"]], "tohexstr() (in module camera_interface.tools)": [[2, "camera_interface.tools.ToHexStr"], [5, "camera_interface.tools.ToHexStr"]], "to_hex_str() (in module camera_interface.camoperation_class)": [[2, "camera_interface.CamOperation_class.To_hex_str"], [5, "camera_interface.CamOperation_class.To_hex_str"]], "trigger_once() (camera_interface.camoperation_class.cameraoperation method)": [[2, "camera_interface.CamOperation_class.CameraOperation.Trigger_once"], [5, "camera_interface.CamOperation_class.CameraOperation.Trigger_once"]], "txtwrapby() (in module camera_interface.tools)": [[2, "camera_interface.tools.TxtWrapBy"], [5, "camera_interface.tools.TxtWrapBy"]], "work_thread() (camera_interface.camoperation_class.cameraoperation method)": [[2, "camera_interface.CamOperation_class.CameraOperation.Work_thread"], [5, "camera_interface.CamOperation_class.CameraOperation.Work_thread"]], "camera_interface": [[2, "module-camera_interface"], [5, "module-camera_interface"]], "camera_interface.camoperation_class": [[2, "module-camera_interface.CamOperation_class"], [5, "module-camera_interface.CamOperation_class"]], "camera_interface.camera": [[2, "module-camera_interface.camera"], [5, "module-camera_interface.camera"]], "camera_interface.tools": [[2, "module-camera_interface.tools"], [5, "module-camera_interface.tools"]], "close_device() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.close_device"], [5, "camera_interface.camera.MachineVisionCamera.close_device"]], "decoding_char() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.decoding_char"], [5, "camera_interface.camera.MachineVisionCamera.decoding_char"]], "enable_controls() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.enable_controls"], [5, "camera_interface.camera.MachineVisionCamera.enable_controls"]], "enum_devices() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.enum_devices"], [5, "camera_interface.camera.MachineVisionCamera.enum_devices"]], "get_param() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.get_param"], [5, "camera_interface.camera.MachineVisionCamera.get_param"]], "image_captured_callback() (camera_interface.camoperation_class.cameraoperation method)": [[2, "camera_interface.CamOperation_class.CameraOperation.image_captured_callback"], [5, "camera_interface.CamOperation_class.CameraOperation.image_captured_callback"]], "is_float() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.is_float"], [5, "camera_interface.camera.MachineVisionCamera.is_float"]], "message_box() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.message_box"], [5, "camera_interface.camera.MachineVisionCamera.message_box"]], "open_device() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.open_device"], [5, "camera_interface.camera.MachineVisionCamera.open_device"]], "save_bmp() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.save_bmp"], [5, "camera_interface.camera.MachineVisionCamera.save_bmp"]], "set_continue_mode() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.set_continue_mode"], [5, "camera_interface.camera.MachineVisionCamera.set_continue_mode"]], "set_device_information_index() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.set_device_information_index"], [5, "camera_interface.camera.MachineVisionCamera.set_device_information_index"]], "set_image_callback_on_trigger() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.set_image_callback_on_trigger"], [5, "camera_interface.camera.MachineVisionCamera.set_image_callback_on_trigger"]], "set_param() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.set_param"], [5, "camera_interface.camera.MachineVisionCamera.set_param"]], "set_software_trigger_mode() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.set_software_trigger_mode"], [5, "camera_interface.camera.MachineVisionCamera.set_software_trigger_mode"]], "set_ui() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.set_ui"], [5, "camera_interface.camera.MachineVisionCamera.set_ui"]], "start_grabbing() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.start_grabbing"], [5, "camera_interface.camera.MachineVisionCamera.start_grabbing"]], "stop_grabbing() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.stop_grabbing"], [5, "camera_interface.camera.MachineVisionCamera.stop_grabbing"]], "trigger_once() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.trigger_once"], [5, "camera_interface.camera.MachineVisionCamera.trigger_once"]], "xfunc() (camera_interface.camera.machinevisioncamera method)": [[2, "camera_interface.camera.MachineVisionCamera.xFunc"], [5, "camera_interface.camera.MachineVisionCamera.xFunc"]], "ui_mainwindow (class in gui.pyuicbasicdemo)": [[6, "gui.PyUICBasicDemo.Ui_MainWindow"], [15, "gui.PyUICBasicDemo.Ui_MainWindow"]], "ui_mainwindow (class in gui.pyuidesign)": [[6, "gui.pyUIdesign.Ui_MainWindow"], [15, "gui.pyUIdesign.Ui_MainWindow"]], "gui": [[6, "module-gui"], [15, "module-gui"]], "gui.pyuicbasicdemo": [[6, "module-gui.PyUICBasicDemo"], [15, "module-gui.PyUICBasicDemo"]], "gui.pyuidesign": [[6, "module-gui.pyUIdesign"], [15, "module-gui.pyUIdesign"]], "retranslateui() (gui.pyuicbasicdemo.ui_mainwindow method)": [[6, "gui.PyUICBasicDemo.Ui_MainWindow.retranslateUi"], [15, "gui.PyUICBasicDemo.Ui_MainWindow.retranslateUi"]], "retranslateui() (gui.pyuidesign.ui_mainwindow method)": [[6, "gui.pyUIdesign.Ui_MainWindow.retranslateUi"], [15, "gui.pyUIdesign.Ui_MainWindow.retranslateUi"]], "setupui() (gui.pyuicbasicdemo.ui_mainwindow method)": [[6, "gui.PyUICBasicDemo.Ui_MainWindow.setupUi"], [15, "gui.PyUICBasicDemo.Ui_MainWindow.setupUi"]], "setupui() (gui.pyuidesign.ui_mainwindow method)": [[6, "gui.pyUIdesign.Ui_MainWindow.setupUi"], [15, "gui.pyUIdesign.Ui_MainWindow.setupUi"]], "controller (class in gui_camera_bindings.controller)": [[7, "gui_camera_bindings.controller.Controller"], [16, "gui_camera_bindings.controller.Controller"]], "basic_demo_test() (gui_camera_bindings.controller.controller method)": [[7, "gui_camera_bindings.controller.Controller.basic_demo_test"], [16, "gui_camera_bindings.controller.Controller.basic_demo_test"]], "gui_camera_bindings": [[7, "module-gui_camera_bindings"], [16, "module-gui_camera_bindings"]], "gui_camera_bindings.controller": [[7, "module-gui_camera_bindings.controller"], [16, "module-gui_camera_bindings.controller"]], "set_camera_to_gui() (gui_camera_bindings.controller.controller method)": [[7, "gui_camera_bindings.controller.Controller.set_camera_to_gui"], [16, "gui_camera_bindings.controller.Controller.set_camera_to_gui"]], "test() (in module gui_camera_bindings.controller)": [[7, "gui_camera_bindings.controller.test"], [16, "gui_camera_bindings.controller.test"]], "main": [[8, "module-main"], [18, "module-main"]], "test_callback() (in module main)": [[8, "main.test_callback"], [18, "main.test_callback"]], "mainwin (class in main_gui)": [[9, "main_gui.MainWin"], [19, "main_gui.MainWin"]], "tohexstr() (main_gui.mainwin method)": [[9, "main_gui.MainWin.ToHexStr"], [19, "main_gui.MainWin.ToHexStr"]], "analysis() (main_gui.mainwin method)": [[9, "main_gui.MainWin.analysis"], [19, "main_gui.MainWin.analysis"]], "camera_debug() (main_gui.mainwin method)": [[9, "main_gui.MainWin.camera_debug"], [19, "main_gui.MainWin.camera_debug"]], "camera_setting() (main_gui.mainwin method)": [[9, "main_gui.MainWin.camera_setting"], [19, "main_gui.MainWin.camera_setting"]], "choose_directory_path() (main_gui.mainwin method)": [[9, "main_gui.MainWin.choose_directory_path"], [19, "main_gui.MainWin.choose_directory_path"]], "create_project() (main_gui.mainwin method)": [[9, "main_gui.MainWin.create_project"], [19, "main_gui.MainWin.create_project"]], "detection() (main_gui.mainwin method)": [[9, "main_gui.MainWin.detection"], [19, "main_gui.MainWin.detection"]], "main_gui": [[9, "module-main_gui"], [19, "module-main_gui"]], "open_image() (main_gui.mainwin method)": [[9, "main_gui.MainWin.open_image"], [19, "main_gui.MainWin.open_image"]], "preprocessing_step() (main_gui.mainwin method)": [[9, "main_gui.MainWin.preprocessing_step"], [19, "main_gui.MainWin.preprocessing_step"]], "recognition() (main_gui.mainwin method)": [[9, "main_gui.MainWin.recognition"], [19, "main_gui.MainWin.recognition"]], "save_data() (main_gui.mainwin method)": [[9, "main_gui.MainWin.save_data"], [19, "main_gui.MainWin.save_data"]], "save_gui_values() (main_gui.mainwin method)": [[9, "main_gui.MainWin.save_gui_values"], [19, "main_gui.MainWin.save_gui_values"]], "switch_mode() (main_gui.mainwin method)": [[9, "main_gui.MainWin.switch_mode"], [19, "main_gui.MainWin.switch_mode"]], "example (class in test)": [[12, "test.Example"], [22, "test.Example"]], "initui() (test.example method)": [[12, "test.Example.initUI"], [22, "test.Example.initUI"]], "loglabel() (test.example method)": [[12, "test.Example.logLabel"], [22, "test.Example.logLabel"]], "mine() (test.example method)": [[12, "test.Example.mine"], [22, "test.Example.mine"]], "on_sld_valuechanged() (test.example method)": [[12, "test.Example.on_sld_valueChanged"], [22, "test.Example.on_sld_valueChanged"]], "printlabel() (test.example method)": [[12, "test.Example.printLabel"], [22, "test.Example.printLabel"]], "test": [[12, "module-test"], [22, "module-test"]], "val_changed (test.example attribute)": [[12, "test.Example.val_Changed"], [22, "test.Example.val_Changed"]], "flush_then_wait() (in module test1)": [[13, "test1.flush_then_wait"], [23, "test1.flush_then_wait"]], "test1": [[13, "module-test1"], [23, "module-test1"]], "mainwindow (class in test2)": [[14, "test2.MainWindow"], [24, "test2.MainWindow"]], "handle_state() (test2.mainwindow method)": [[14, "test2.MainWindow.handle_state"], [24, "test2.MainWindow.handle_state"]], "handle_stderr() (test2.mainwindow method)": [[14, "test2.MainWindow.handle_stderr"], [24, "test2.MainWindow.handle_stderr"]], "handle_stdout() (test2.mainwindow method)": [[14, "test2.MainWindow.handle_stdout"], [24, "test2.MainWindow.handle_stdout"]], "message() (test2.mainwindow method)": [[14, "test2.MainWindow.message"], [24, "test2.MainWindow.message"]], "process_finished() (test2.mainwindow method)": [[14, "test2.MainWindow.process_finished"], [24, "test2.MainWindow.process_finished"]], "start_process() (test2.mainwindow method)": [[14, "test2.MainWindow.start_process"], [24, "test2.MainWindow.start_process"]], "test2": [[14, "module-test2"], [24, "module-test2"]]}})